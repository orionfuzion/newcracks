#
# Audio Sculpture 1.5 - IPL Part#1 - BKP $140
#
# Neutralize track#1 protection:
# Hidden data into gap (HDG) and invalid data in gap (IDG).
#
# Track#1 content has been read at $60000 ($1870 bytes).
# The protection code looks for the specific "$92 $07 $91 $90" sequence
# after the invalid character $F7, at the beginning of the track.
# This byte sequence is not present in case of a copy.
# Therefore, we "patch" the buffer containing the track#1 content with
# the expected byte sequence.
#

# Dump the code which looks for the specific byte sequence.
# This routine is a Trace-Vector-Decoder, so only the first instruction is
# "visible".
d $140-$146

# Here is the routine entirely decrypted:
# $00000140: 41f9 0006 0000    lea       $60000,a0
# $00000146: 0c18 007f         cmpi.b    #$7f,(a0)+
# $0000014a: 6718              beq.s     $164
# $0000014c: 43f9 0000 007a    lea       $7a,a1
# $00000152: 21c9 0024         move.l    a1,$0024.w
# $00000156: 0c10 00a1         cmpi.b    #$a1,(a0)
# $0000015a: 6702              beq.s     $15e
# $0000015e: 4e70              reset
# $00000160: 4ff8 0008         lea       $0008.w,sp
# $00000164: 7e00              moveq     #0,d7
# $00000166: 1e18              move.b    (a0)+,d7
# $00000168: e18f              lsl.l     #8,d7
# $0000016a: 1e18              move.b    (a0)+,d7
# $0000016c: e18f              lsl.l     #8,d7
# $0000016e: 1e18              move.b    (a0)+,d7
# $00000170: e18f              lsl.l     #8,d7
# $00000172: 1e18              move.b    (a0)+,d7
# $00000174: 21c7 02da         move.l    d7,$02da.w

# Dump the first 128 bytes of track#1
m $60000-$60080

# Here is the dump obtained when running the STX image:
# $00060000: 6a 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12   j...............
# $00060010: 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12   ................
# $00060020: 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12   ................
# $00060030: 12 12 12 12 12 12 12 12 12 12 12 12 18 78 c2 7f   .............x..
# $00060040: 92 07 91 90 90 ff ff ff ff ff ff ff ff ff ff ff   ................
# $00060050: ff c2 a1 a1 fe 01 00 01 02 bc db 4e 4e 4e 4e 4e   ...........NNNNN
# $00060060: 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e   NNNNNNNNNNNNNNNN
# $00060070: 4e 00 00 00 00 00 00 00 00 00 00 00 00 01 14 a1   N...............

# Write the correct byte sequence
w $60000 $7f $92 $07 $91 $90 $90

# When next breakpoint (pc=$60d76) is hit, execute commands from as15_bp2_1.ini
b pc = $60d76 :trace :once :file as15_bp2_1.ini
