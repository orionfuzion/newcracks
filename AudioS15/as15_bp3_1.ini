#
# Audio Sculpture 1.5 - IPL Part#3.1 - BKP $7851c
#
# Neutralize track#2 protection (2nd part):
# Hidden data into gap (HDG) and invalid data in gap (IDG).
#
# (1st part of track#2 protection is neutralized in as15_bp2_1.ini)
#
# Track#2 content has been read at $78000 ($1870 bytes).
# Only the last $270 bytes of track#2 are still present since the 3rd part
# of the IPL ($1600 bytes) has been loaded at $78000 (see as15_bp2_2.ini).
# The protection code looks for the specific "$B4 $F7" and "$DE $AF"
# sequences after character $CD, at the end of the track.
# This byte sequence is not present in case of a copy.
# Therefore, we "patch" the buffer containing the track#2 content with
# the expected byte sequence.
#

# Dump the code which looks for the specific byte sequence
d $7851c-$78536

# Here is the corresponding dump:
# $0007851c: 41fa 1262    lea       $79780(pc),a0
# $00078520: 0c18 00cd    cmpi.b    #$cd,(a0)+
# $00078524: 66fa         bne.s     $78520
# $00078526: 1e18         move.b    (a0)+,d7
# $00078528: e14f         lsl.w     #8,d7
# $0007852a: 1e10         move.b    (a0),d7
# $0007852c: 5a48         addq.w    #5,a0
# $0007852e: 7aff         moveq     #$ff,d5
# $00078530: 1a18         move.b    (a0)+,d5
# $00078532: e14d         lsl.w     #8,d5
# $00078534: 1a10         move.b    (a0),d5

# Dump the end of track#2 (240 bytes)
m $79780-$79870

# Here is the dump obtained when running the STX image:
# $00079780: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                   
# $00079790: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                   
# $000797A0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                   
# $000797B0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                   
# $000797C0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                   
# $000797D0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                   
# $000797E0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                   
# $000797F0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                   
# $00079800: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                   
# $00079810: 20 20 20 20 20 20 20 20 20 20 20 20 00 38 01 21               .8.!
# $00079820: c2 0b cd b4 f7 de ad c0 de de af 4e 4e 4e 4e 4e   ...........NNNNN
# $00079830: 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e   NNNNNNNNNNNNNNNN
# $00079840: 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e   NNNNNNNNNNNNNNNN
# $00079850: 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e   NNNNNNNNNNNNNNNN
# $00079860: 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e   NNNNNNNNNNNNNNNN

# Write the correct byte sequence
w $79780 $cd $b4 $f7 $de $ad $c0 $de $de $af

# When next breakpoint (pc=$78bb0) is hit, execute commands from as15_bp3_2.ini
b pc = $78bb0 :trace :once :file as15_bp3_2.ini
