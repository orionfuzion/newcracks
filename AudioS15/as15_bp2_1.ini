#
# Audio Sculpture 1.5 - IPL Part#2.1 - BKP $60d76
#
# Neutralize track#2 protection (1st part):
# Hidden data into gap (HDG) and invalid data in gap (IDG).
#
# (2nd part of track#2 protection is neutralized in as15_bp3_1.ini)
#
# Track#2 uses a special format: it has 5 x 1024-bytes sectors +
# 1 x 512-bytes sector.
#
# Track#2 contains the code of the 3rd part of the IPL.
#
# Track#2 content has been read at $78000 ($1870 bytes).
# The protection code looks for the specific "$DE $AD $FA $CE" sequence
# after characters $F7 (invalid) and $00, at the beginning of the track.
# This byte sequence is not present in case of a copy.
# Therefore, we "patch" the buffer containing the track#2 content with
# the expected byte sequence.
#

# Dump the code which looks for the specific byte sequence
d $60d72-$60d98

# Here is the corresponding dump:
# $00060d72: 2078 044e    movea.l   $044e.w,a0
# $00060d76: 1018         move.b    (a0)+,d0
# $00060d78: b03c 00a1    cmp.b     #$a1,d0
# $00060d7c: 671e         beq.s     $60d9c
# $00060d7e: 0c00 00f7    cmpi.b    #$f7,d0
# $00060d82: 66f2         bne.s     $60d76
# $00060d84: 4a10         tst.b     (a0)
# $00060d86: 66ee         bne.s     $60d76
# $00060d88: 5248         addq.w    #1,a0
# $00060d8a: 1c18         move.b    (a0)+,d6
# $00060d8c: e14e         lsl.w     #8,d6
# $00060d8e: 1c18         move.b    (a0)+,d6
# $00060d90: 4846         swap      d6
# $00060d92: 1c18         move.b    (a0)+,d6
# $00060d94: e14e         lsl.w     #8,d6
# $00060d96: 1c18         move.b    (a0)+,d6

# Dump the first 128 bytes of track#2
m $78000-$78080

# Here is the dump obtained when running the STX image:
# $00078000: 09 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9   ................
# $00078010: c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c5 14 0b cd b4 f7   ................
# $00078020: 00 de ad fa ce 00 00 00 00 00 00 00 00 14 a1 a1   ................
# $00078030: fe 02 00 01 03 37 26 4e 4e 4e 4e 4e 4e 4e 4e 4e   .....7&NNNNNNNNN
# $00078040: 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 00 00 00   NNNNNNNNNNNNN...
# $00078050: 00 00 00 00 00 00 00 00 00 01 14 a1 a1 fb 02 f1   ................
# $00078060: 14 00 07 00 48 1c 09 c8 10 67 c0 40 0c 3e 46 0e   ....H....g.@.>F.
# $00078070: 20 64 00 98 3f 80 00 00 30 41 04 00 84 1c 02 0e    d..?...0A......

# Write the correct byte sequence
w $78000 $f7 $00 $de $ad $fa $ce

# When next breakpoint (pc=$60da2) is hit, execute commands from as15_bp2_2.ini
b pc = $60da2 :trace :once :file as15_bp2_2.ini
